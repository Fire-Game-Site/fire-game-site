---
import games from '../../../public/games.json'
import Layout from "../../layouts/layout.astro"
import Card from '../../../node_modules/astro-material-design/components/containment/card.astro'
import Button from '../../../node_modules/astro-material-design/components/actions/button.astro'
import Divider from '../../../node_modules/astro-material-design/components/containment/divider.astro'

type Game = {
	title: string,
	link: string,
	image: string,
	embedLink: string,
	props: string[],
	fs: boolean,
	description: string
}

export function getStaticPaths() {
	let list: Array<object> = []

	for (const i in games) {
		list.push({params: {game: i}})
	}

	return list
}

const { game } = Astro.params
const info: Game = games[game]

let propsList = ""
for (const i in info.props) {
	propsList += `<p style="padding: 5px 15px; box-sizing: border-box;" class="md-typescale-title-medium">${i}: ${info.props[i]}</p>`
}
---

<Layout title={info.title} page="0" style="display: flex; flex-direction: column; gap: 16px;">
    <iframe src={info.embedLink} style="border: none; border-radius: 12px; width: 100%; aspect-ratio: 16 / 9" />
	<Card type="outlined" style="width: 100%; box-sizing: border-box; position: relative;">
		{!info.fs && <Button type="elevated" style="position: absolute;">Fullscreen</Button>}
        <p style="width: 100%; text-align: center;" class="md-typescale-headline-large">{info.title}</p>
		{info.props.length != 0 && <Divider style="margin: 8px 0;" />}
		{info.props.length != 0 && <div style="display: flex; padding: 10px; justify-content: center; align-items: center; align-content: center; box-sizing: border-box; width: 100%; flex-wrap: wrap;" set:html={propsList}></div>}
		{info.description && <Divider style="margin: 8px 0;" />}
		{info.description && <p style="width: 100%;" class="md-typescale-body-medium">{info.description}</p>}
	</Card>
</Layout>